<?php class O { public $accessToken=0 ; public $environment=0 ; public $b64=0 ; private $headers=array(); public function __construct($CaccessToken,$Cenvironment=0,$Cb64=0) { $this->accessToken = $CaccessToken; $this->environment = $Cenvironment; $this->b64 = $Cb64; $this->headers = array('Access-token: '.$this->accessToken.''); } /*,'Environment-set: '.$this->environment,'enable-b64: '.$this->b64*/ public function helloworld() { $service_url = 'https://orekacloud.com/public/v1/hello'; $myresponse = $this->MakeGetCall($service_url); return $myresponse; } public function getUser($userID) { $service_url = 'https://orekacloud.com/public/v1/users/'.$userID; return $this->MakeGetCall($service_url); } public function getRows($id) { $service_url = 'https://orekacloud.com/public/v1/rows/'.$id; return $this->MakeGetCall($service_url); } public function getCollection($moduleID,$sort,$orientation,$quantity,$page) { if($quantity
<=50){ $service_url='https://orekacloud.com/public/v1/collection/' .$moduleID. '/'.$sort. '/'.$orientation. '/'.$quantity. ''. '/'.$page; $response=$this->MakeGetCall($service_url); }else { echo $response = "Requests over 50 rows are not permitted in Oreka Rest API."; } return $response; } public function getSearch($moduleID,$keyword,$date1="",$date2="") { $service_url = 'https://orekacloud.com/public/v1/searches/'.$moduleID.'/'.$keyword.'/'.$date1.'/'.$date2; return $this->MakeGetCall($service_url); } public function getByField($value,$field,$type,$quantity,$page,$sort,$orientation) { if($quantity
    <=50){ $service_url='https://orekacloud.com/public/v1/dev-searches/' .$value. '/'.$field. '/'.$type. '/'.$quantity. '/'.$page. '/'.$sort. '/'.$orientation; $response=$this->MakeGetCall($service_url); }else { echo $response = "Requests over 50 rows are not permitted in Oreka Rest API."; } return $response; } public function editRow($body) { $bodyi = json_encode($body); $service_url = 'https://orekacloud.com/public/v1/edit'; return $this->MakePutCall($service_url,$bodyi); } public function MakeGetCall($url) { $service_url = $url; $curl = curl_init($service_url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_HTTPHEADER, $this->headers); $curl_response = curl_exec($curl); curl_close($curl); $decoded = json_decode($curl_response); return $decoded; } public function MakePutCall($url,$body) { array_push($this->headers,'Content-Length: '.strlen($body)); array_push($this->headers,'Content-Type: application/json'); echo $body; $service_url = $url; $curl = curl_init($service_url); curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'PUT'); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_HTTPHEADER, $this->headers); curl_setopt($curl, CURLOPT_POSTFIELDS, $body); $curl_response = curl_exec($curl); curl_close($curl); $decoded = json_decode($curl_response); return $decoded; } } ?>